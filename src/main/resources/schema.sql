/*
JDBC version - just in case
*/

/*

DROP TABLE IF EXISTS order_ CASCADE;
DROP SEQUENCE IF EXISTS seq1 CASCADE;
CREATE SEQUENCE seq1 START WITH 1;

CREATE TABLE order_ (
   id BIGINT NOT NULL PRIMARY KEY DEFAULT nextval('seq1'),
   orderNumber VARCHAR(255) NOT NULL
);


DROP TABLE IF EXISTS orderRow;
DROP SEQUENCE IF EXISTS seq2 CASCADE;
CREATE SEQUENCE seq2 START WITH 1;

CREATE TABLE orderRow (
    id BIGINT NOT NULL PRIMARY KEY DEFAULT nextval('seq2'),
    orderId BIGINT NOT NULL REFERENCES order_ (id) ON DELETE CASCADE,
    itemName VARCHAR(255) NOT NULL,
    quantity INTEGER NOT NULL,
    price INTEGER NOT NULL

);

*/


/*
JPA version
*/

DROP TABLE IF EXISTS order_rows;
DROP TABLE IF EXISTS orders;
DROP TABLE IF EXISTS AUTHORITIES;
DROP TABLE IF EXISTS USERS;
DROP SEQUENCE IF EXISTS seq3;

CREATE SEQUENCE seq3 AS INTEGER START WITH 1;

CREATE TABLE orders (
    id BIGINT NOT NULL PRIMARY KEY DEFAULT nextval('seq3'),
    order_number VARCHAR(255)
);

CREATE TABLE order_rows (
    orders_id BIGINT,
    item_name VARCHAR(255),
    quantity INT,
    price INT,
    FOREIGN KEY (orders_id)
        REFERENCES orders ON DELETE CASCADE
);

CREATE TABLE USERS (
    username VARCHAR(255) NOT NULL PRIMARY KEY,
    password VARCHAR(255) NOT NULL,
    enabled BOOLEAN NOT NULL,
    first_name VARCHAR(255) NOT NULL
);

CREATE TABLE AUTHORITIES (
    username VARCHAR(50) NOT NULL,
    authority VARCHAR(50) NOT NULL,
    FOREIGN KEY (username)
        REFERENCES USERS ON DELETE CASCADE
);